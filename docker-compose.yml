services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - APP_URL=${APP_URL}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - CLERK_PUBLISHABLE_KEY=${CLERK_PUBLISHABLE_KEY}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - UPLOADTHING_TOKEN=${UPLOADTHING_TOKEN}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - PAYSTACK_SECRET_KEY=${PAYSTACK_SECRET_KEY}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lms
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql_seed_script.sql:/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
